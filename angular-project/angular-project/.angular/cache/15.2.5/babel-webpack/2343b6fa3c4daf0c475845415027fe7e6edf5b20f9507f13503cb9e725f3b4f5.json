{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/phone-verify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/register.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction OtpVerifyComponent_div_0_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \"Enter your 6 digit code.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtpVerifyComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h4\");\n    i0.ɵɵtext(2, \"Enter your 6 digit code for verification:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"form\", 2, 3)(6, \"div\", 5)(7, \"label\", 25);\n    i0.ɵɵtext(8, \"Enter OTP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 26);\n    i0.ɵɵtemplate(10, OtpVerifyComponent_div_0_div_10_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementStart(12, \"div\")(13, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function OtpVerifyComponent_div_0_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const _r2 = i0.ɵɵreference(5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick(_r2.value));\n    });\n    i0.ɵɵtext(14, \"Verify OTP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"br\")(16, \"br\");\n    i0.ɵɵelementStart(17, \"small\")(18, \"a\", 29);\n    i0.ɵɵlistener(\"click\", function OtpVerifyComponent_div_0_Template_a_click_18_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onClick2());\n    });\n    i0.ɵɵtext(19, \"Resend OTP?\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.form.get(\"otp\").errors == null ? null : ctx_r0.form.get(\"otp\").errors[\"minlength\"]) || (ctx_r0.form.get(\"otp\").errors == null ? null : ctx_r0.form.get(\"otp\").errors[\"maxlength\"]));\n  }\n}\nexport class OtpVerifyComponent {\n  constructor(phoneVerify, router, registerService) {\n    this.phoneVerify = phoneVerify;\n    this.router = router;\n    this.registerService = registerService;\n    // @Output() event = new EventEmitter<string>();\n    this.form = new FormGroup({\n      otp: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]),\n      name: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\n      whatsappNumber: new FormControl(null, Validators.required),\n      college: new FormControl(null, Validators.required),\n      branch: new FormControl(null, Validators.required),\n      semester: new FormControl(null, Validators.required),\n      address: new FormControl(null, Validators.required),\n      parentNumber: new FormControl(null, Validators.required),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      course: new FormGroup({\n        cid: new FormControl()\n      })\n    });\n    this.otpview = true;\n  }\n  get otp() {\n    return this.form.get('otp');\n  }\n  // check(retval:any):boolean{\n  //   if(retval===\"Valid otp!\"){\n  //     return true;\n  //   }else{\n  //     return false;\n  //   }\n  // }\n  onClick(data) {\n    let maindata = Object.assign(data, JSON.parse(this.phoneVerify.getNumber()));\n    console.log(maindata);\n    this.phoneVerify.postOtp(maindata).subscribe(response => {\n      console.log(response);\n      alert(\"Otp is validated\");\n      this.router.navigate(['phoneNumberVerify/otpVerify/registerForm']);\n      this.phoneVerify.clear();\n      // this.registerService.setData(response);\n      this.registerform = response;\n      // this.event.emit(this.registerService.getData());\n    }, error => {\n      console.log(error);\n      alert(\"Otp is invalid\");\n    });\n    // if(this.check(retval)){\n    //   alert(\"Phone number verified successfully\");\n    //   this.router.navigate(['registerForm']);\n    // }else{\n    //   alert(\"Invalid otp.Verify again\");\n    // }\n    // this.phoneVerify.getData((data:any)=>{\n    //    if(data!==null){  \n    //       this.registerService.setData(data);\n    //    }\n    // });\n  }\n  // senddata(){\n  //   //let data2=this.registerService.getData();\n  //   this.event.emit(this.registerService.getData());\n  // }\n  onClick2() {\n    console.log(JSON.parse(this.phoneVerify.getNumber()));\n    this.phoneVerify.postNumber(JSON.parse(this.phoneVerify.getNumber()), retval => {\n      console.log(retval);\n      alert(\"Otp sent to your phone number successfully\");\n    });\n  }\n}\nOtpVerifyComponent.ɵfac = function OtpVerifyComponent_Factory(t) {\n  return new (t || OtpVerifyComponent)(i0.ɵɵdirectiveInject(i1.PhoneVerifyService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RegisterService));\n};\nOtpVerifyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OtpVerifyComponent,\n  selectors: [[\"app-otp-verify\"]],\n  decls: 49,\n  vars: 2,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [3, \"formGroup\"], [\"f\", \"ngForm\"], [1, \"text-center\"], [1, \"fg\"], [\"for\", \"name\", 1, \"form-label\"], [\"formControlName\", \"name\", \"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\"], [\"for\", \"phoneNumber\", 1, \"form-label\"], [\"formControlName\", \"phoneNumber\", \"type\", \"text\", \"id\", \"phoneNumber\", \"name\", \"phoneNumber\", 1, \"form-control\"], [\"for\", \"whatsappNumber\", 1, \"form-label\"], [\"formControlName\", \"whatsappNumber\", \"type\", \"text\", \"id\", \"whatsappNumber\", \"name\", \"whatsappNumber\", 1, \"form-control\"], [\"for\", \"college\", 1, \"form-label\"], [\"formControlName\", \"college\", \"type\", \"text\", \"id\", \"college\", \"name\", \"college\", 1, \"form-control\"], [\"for\", \"branch\", 1, \"form-label\"], [\"formControlName\", \"branch\", \"type\", \"text\", \"id\", \"branch\", \"name\", \"branch\", 1, \"form-control\"], [\"for\", \"semester\", 1, \"form-label\"], [\"formControlName\", \"semester\", \"type\", \"text\", \"id\", \"semester\", \"name\", \"semester\", 1, \"form-control\"], [\"for\", \"address\", 1, \"form-label\"], [\"formControlName\", \"address\", \"type\", \"text\", \"id\", \"address\", \"name\", \"address\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"text\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\"], [\"for\", \"parentNumber\", 1, \"form-label\"], [\"formControlName\", \"parentNumber\", \"type\", \"text\", \"id\", \"parentNumber\", \"name\", \"parentNumber\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"for\", \"otp\", 1, \"form-label\"], [\"formControlName\", \"otp\", \"type\", \"text\", \"id\", \"otp\", \"name\", \"otp\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", 3, \"click\"], [\"type\", \"button\", 1, \"link\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n  template: function OtpVerifyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵtemplate(0, OtpVerifyComponent_div_0_Template, 20, 2, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"form\", 2, 3)(4, \"h3\", 4);\n      i0.ɵɵtext(5, \"Registration form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\")(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"WhatsApp Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 12);\n      i0.ɵɵtext(22, \"College\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 5)(25, \"label\", 14);\n      i0.ɵɵtext(26, \"Branch\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 5)(29, \"label\", 16);\n      i0.ɵɵtext(30, \"Semester\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 5)(33, \"label\", 18);\n      i0.ɵɵtext(34, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 5)(37, \"label\", 20);\n      i0.ɵɵtext(38, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 5)(41, \"label\", 22);\n      i0.ɵɵtext(42, \"Parent Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"br\");\n      i0.ɵɵelementStart(45, \"div\")(46, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function OtpVerifyComponent_Template_button_click_46_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r1 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.postdata(_r1.value));\n      });\n      i0.ɵɵtext(47, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"br\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.otpview);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\"button[_ngcontent-%COMP%]{\\r\\n    background-color:#563d7c;\\r\\n    color:white;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover{\\r\\n    background-color:#563d7c;\\r\\n    color:white;\\r\\n}\\r\\n\\r\\n.container[_ngcontent-%COMP%]{\\r\\n    padding: 40px 240px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]{\\r\\n    border-color: black;\\r\\n    border-width: 0.0025cm;\\r\\n    border-style: solid;\\r\\n    border-radius: 5px;\\r\\n    padding: 10px 10px;\\r\\n}\\r\\n\\r\\n.fg[_ngcontent-%COMP%]{\\r\\n    padding: 30px 30px;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%]{\\r\\n    padding-right: 140px;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n    font-size: large;\\r\\n}\\r\\n\\r\\n.link[_ngcontent-%COMP%]:hover{\\r\\n    text-decoration: underline;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3RyYXRpb24vb3RwLXZlcmlmeS9vdHAtdmVyaWZ5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7SUFDeEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSwwQkFBMEI7QUFDOUIiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiM1NjNkN2M7XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNTYzZDdjO1xyXG4gICAgY29sb3I6d2hpdGU7XHJcbn1cclxuXHJcbi5jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiA0MHB4IDI0MHB4O1xyXG59XHJcblxyXG5mb3Jte1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci13aWR0aDogMC4wMDI1Y207XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweCAxMHB4O1xyXG59XHJcblxyXG4uZmd7XHJcbiAgICBwYWRkaW5nOiAzMHB4IDMwcHg7XHJcbn1cclxuXHJcbmlucHV0e1xyXG4gICAgcGFkZGluZy1yaWdodDogMTQwcHg7XHJcbn1cclxuXHJcbmxhYmVse1xyXG4gICAgZm9udC1zaXplOiBsYXJnZTtcclxufVxyXG5cclxuLmxpbms6aG92ZXJ7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","OtpVerifyComponent","constructor","phoneVerify","router","registerService","otp","required","minLength","maxLength","name","phoneNumber","pattern","whatsappNumber","college","branch","semester","address","parentNumber","email","course","cid","form","get","onClick","data","maindata","Object","assign","JSON","parse","getNumber","console","log","postOtp","subscribe","response","alert","navigate","clear","registerform","error","onClick2","postNumber","retval","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["G:\\project\\savitasoft\\angular-project\\src\\app\\components\\registration\\otp-verify\\otp-verify.component.ts","G:\\project\\savitasoft\\angular-project\\src\\app\\components\\registration\\otp-verify\\otp-verify.component.html"],"sourcesContent":["\r\nimport { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { PhoneVerifyService } from 'src/app/services/phone-verify.service';\r\nimport { RegisterService } from 'src/app/services/register.service';\r\n//import { RegisterForm } from '../register-form/register-form.component';\r\n\r\nexport interface Otp{\r\n  otp: string;\r\n}\r\nexport interface RegisterForm{\r\n  name: string;\r\n  phoneNumber: string;\r\n  whatsappNumber: string;\r\n  college: string;\r\n  branch: string;\r\n  semester: number;\r\n  address: string;\r\n  email: string;\r\n  parentNumber:string;\r\n  cid: number;\r\n  cname: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-otp-verify',\r\n  templateUrl: './otp-verify.component.html',\r\n  styleUrls: ['./otp-verify.component.css']\r\n})\r\nexport class OtpVerifyComponent {\r\n // @Output() event = new EventEmitter<string>();\r\n  form= new FormGroup({\r\n    otp: new FormControl('',[Validators.required, Validators.minLength(6),Validators.maxLength(6)]),\r\n    name:  new FormControl<any>(null,Validators.required),\r\n    phoneNumber: new FormControl<any>(null,[Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\r\n    whatsappNumber: new FormControl(<any>null,Validators.required),\r\n    college: new FormControl<any>(null,Validators.required),\r\n    branch: new FormControl<any>(null,Validators.required),\r\n    semester: new FormControl<any>(null,Validators.required),\r\n    address: new FormControl<any>(null,Validators.required),\r\n    parentNumber:new FormControl<any>(null,Validators.required),\r\n    email: new FormControl<any>(null,[Validators.required,Validators.email]),\r\n    course:new FormGroup({\r\n      cid: new FormControl()\r\n    })\r\n });\r\n\r\n otpview:boolean=true;\r\n registerform:RegisterForm;\r\n\r\n  constructor(private phoneVerify: PhoneVerifyService, private router: Router, private registerService:RegisterService){}\r\n\r\n  \r\n  public get otp(){\r\n    return this.form.get('otp');\r\n  }\r\n  \r\n  // check(retval:any):boolean{\r\n  //   if(retval===\"Valid otp!\"){\r\n  //     return true;\r\n  //   }else{\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  onClick(data: string)\r\n  {\r\n     let maindata:any = Object.assign(data,JSON.parse(this.phoneVerify.getNumber()));\r\n     console.log(maindata);\r\n     this.phoneVerify.postOtp(maindata).subscribe((response)=>{\r\n      console.log(response);\r\n      alert(\"Otp is validated\")\r\n      this.router.navigate(['phoneNumberVerify/otpVerify/registerForm']);\r\n      this.phoneVerify.clear();\r\n     // this.registerService.setData(response);\r\n     this.registerform=response;\r\n     // this.event.emit(this.registerService.getData());\r\n      \r\n    },\r\n    (error)=>{\r\n      console.log(error);\r\n      alert(\"Otp is invalid\");\r\n    });\r\n        // if(this.check(retval)){\r\n        //   alert(\"Phone number verified successfully\");\r\n        //   this.router.navigate(['registerForm']);\r\n        // }else{\r\n        //   alert(\"Invalid otp.Verify again\");\r\n        // }\r\n        \r\n   \r\n\r\n    \r\n\r\n    // this.phoneVerify.getData((data:any)=>{\r\n    //    if(data!==null){  \r\n    //       this.registerService.setData(data);\r\n    //    }\r\n    // });\r\n\r\n  }\r\n  // senddata(){\r\n  //   //let data2=this.registerService.getData();\r\n  //   this.event.emit(this.registerService.getData());\r\n  // }\r\n\r\n  onClick2()\r\n  {\r\n    console.log(JSON.parse(this.phoneVerify.getNumber()));\r\n    this.phoneVerify.postNumber(JSON.parse(this.phoneVerify.getNumber()),(retval:any)=>{\r\n      console.log(retval);\r\n      alert(\"Otp sent to your phone number successfully\");\r\n    });\r\n  }\r\n\r\n\r\n  \r\n}\r\n","<div *ngIf=\"otpview\" class=\"container\">\r\n    <h4>Enter your 6 digit code for verification:</h4><br>\r\n    <form [formGroup]=\"form\" #f=\"ngForm\">\r\n        <div class=\"fg\">\r\n            <label for=\"otp\" class=\"form-label\" >Enter OTP</label>\r\n              <input formControlName=\"otp\" type=\"text\" class=\"form-control\" id=\"otp\" name=\"otp\">\r\n                <div class=\"alert alert-danger\" *ngIf=\"form.get('otp').errors?.['minlength'] || form.get('otp').errors?.['maxlength']\">Enter your 6 digit code.</div>\r\n            <br>\r\n            <div>\r\n                <button class=\"btn\" type=\"button\" (click)=\"onClick(f.value)\">Verify OTP</button><br><br>\r\n                <small>\r\n                    <a class=\"link\" type=\"button\" (click)=\"onClick2()\">Resend OTP?</a>\r\n                </small>\r\n            </div>\r\n        </div>\r\n    </form> \r\n</div>\r\n\r\n\r\n<div class=\"container\">\r\n    <form [formGroup]=\"form\" #f=\"ngForm\" >\r\n        <h3 class=\"text-center\">Registration form</h3><br><br>\r\n        <div class=\"fg\">\r\n            <label for=\"name\" class=\"form-label\" >Name</label>\r\n            <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"name\"  name=\"name\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"phoneNumber\" class=\"form-label\" >Phone Number</label>\r\n            <input formControlName=\"phoneNumber\" type=\"text\" class=\"form-control\" id=\"phoneNumber\"  name=\"phoneNumber\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"whatsappNumber\" class=\"form-label\" >WhatsApp Number</label>\r\n            <input formControlName=\"whatsappNumber\" type=\"text\" class=\"form-control\" id=\"whatsappNumber\"  name=\"whatsappNumber\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"college\" class=\"form-label\" >College</label>\r\n            <input formControlName=\"college\" type=\"text\" class=\"form-control\" id=\"college\"  name=\"college\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"branch\" class=\"form-label\" >Branch</label>\r\n            <input formControlName=\"branch\" type=\"text\" class=\"form-control\" id=\"branch\"  name=\"branch\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"semester\" class=\"form-label\" >Semester</label>\r\n            <input formControlName=\"semester\" type=\"text\" class=\"form-control\" id=\"semester\"  name=\"semester\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"address\" class=\"form-label\" >Address</label>\r\n            <input formControlName=\"address\" type=\"text\" class=\"form-control\" id=\"address\"  name=\"address\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"email\" class=\"form-label\" >Email</label>\r\n            <input formControlName=\"email\" type=\"text\" class=\"form-control\" id=\"email\"  name=\"email\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"parentNumber\" class=\"form-label\" >Parent Number</label>\r\n            <input formControlName=\"parentNumber\" type=\"text\" class=\"form-control\" id=\"parentNumber\"  name=\"parentNumber\">\r\n        </div>\r\n        <br>\r\n\r\n\r\n        <div>\r\n            <button class=\"btn btn-primary\" type=\"submit\" (click)=\"postdata(f.value)\">Submit</button><br>\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
