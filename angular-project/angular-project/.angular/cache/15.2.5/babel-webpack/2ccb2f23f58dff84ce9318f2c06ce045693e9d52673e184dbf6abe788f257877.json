{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class BatchService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n    this.baseUrl = \"http://localhost:8080\";\n  }\n  postdata(data) {\n    return this.httpClient.post(this.baseUrl + \"\", data);\n  }\n  getdata(callback) {\n    this.httpClient.get(this.baseUrl + \"\").subscribe(data => {\n      callback(data);\n    });\n  }\n}\nBatchService.ɵfac = function BatchService_Factory(t) {\n  return new (t || BatchService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nBatchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BatchService,\n  factory: BatchService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,UAAsB,EAAUC,MAAc;IAA9C,eAAU,GAAVD,UAAU;IAAsB,WAAM,GAANC,MAAM;IAF1D,YAAO,GAAU,uBAAuB;EAE8B;EAE/DC,QAAQ,CAACC,IAAQ;IACtB,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAC,IAAI,CAACC,OAAO,GAAC,EAAE,EAACF,IAAI,CAAC;EACjD;EAEOG,OAAO,CAACC,QAAc;IAC3B,IAAI,CAACP,UAAU,CAACQ,GAAG,CAAC,IAAI,CAACH,OAAO,GAAC,EAAE,CAAC,CAACI,SAAS,CAAEN,IAAS,IAAG;MACnDI,QAAQ,CAACJ,IAAI,CAAC;IACvB,CAAC,CAAC;EACH;;AAdQL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["BatchService","constructor","httpClient","router","postdata","data","post","baseUrl","getdata","callback","get","subscribe","factory","providedIn"],"sourceRoot":"","sources":["G:\\project\\savitasoft\\angular-project\\src\\app\\services\\batch.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatchService {\n\n  baseUrl: string =\"http://localhost:8080\";\n\n  constructor(private httpClient: HttpClient, private router: Router) { }\n\n  public postdata(data:any){\n    return this.httpClient.post(this.baseUrl+\"\",data)\n    }\n  \n    public getdata(callback : any){\n      this.httpClient.get(this.baseUrl+\"\").subscribe((data :any)=>{\n               callback(data);\n      });\n     }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
