{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/batch.service\";\nexport class BatchdetailsComponent {\n  constructor(batchservice) {\n    this.batchservice = batchservice;\n    this.form = new FormGroup({\n      id: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      startdate: new FormControl('', [Validators.required]),\n      sessionDuration: new FormControl('', [Validators.required]),\n      noOfSeats: new FormControl('', [Validators.required]),\n      startTime: new FormControl('', [Validators.required]),\n      course: new FormGroup({\n        cid: new FormControl()\n      }),\n      trainer: new FormGroup({\n        tid: new FormControl()\n      })\n    });\n    this.batch = [];\n    this.view = false;\n    this.modifyview = false;\n    this.batchservice.getdata(data => {\n      this.batch = data;\n    });\n  }\n  get name() {\n    return this.form.get('name');\n  }\n  get startdate() {\n    return this.form.get('startdate');\n  }\n  get sessionduration() {\n    return this.form.get('sessionduration');\n  }\n  get noOfSeats() {\n    return this.form.get('noOfSeats');\n  }\n  get startTime() {\n    return this.form.get('startTime');\n  }\n  get cid() {\n    return this.form.get('course')?.get('cid');\n  }\n  get tid() {\n    return this.form.get('trainer')?.get('tid');\n  }\n  Onclick(data) {\n    this.batchservice.postdata(data => {\n      console.log(data);\n    });\n    this.batchservice.getdata(data => {\n      this.batch = data;\n    });\n  }\n}\nBatchdetailsComponent.ɵfac = function BatchdetailsComponent_Factory(t) {\n  return new (t || BatchdetailsComponent)(i0.ɵɵdirectiveInject(i1.BatchService));\n};\nBatchdetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BatchdetailsComponent,\n  selectors: [[\"app-batchdetails\"]],\n  decls: 2,\n  vars: 0,\n  template: function BatchdetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"batchdetails works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;AAwBnE,OAAM,MAAOC,qBAAqB;EA0ChCC,YAAoBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAzChC,SAAI,GAAE,IAAIL,SAAS,CAAC;MAClBM,EAAE,EAAE,IAAIL,WAAW,CAAC,EAAE,EAACC,UAAU,CAACK,QAAQ,CAAC;MAC3CC,IAAI,EAAE,IAAIP,WAAW,CAAC,EAAE,EAACC,UAAU,CAACK,QAAQ,CAAC;MAC7CE,SAAS,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACK,QAAQ,CAAE,CAAC;MACrDG,eAAe,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACK,QAAQ,CAAE,CAAC;MAC3DI,SAAS,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACK,QAAQ,CAAE,CAAC;MACrDK,SAAS,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACK,QAAQ,CAAE,CAAC;MACrDM,MAAM,EAAC,IAAIb,SAAS,CAAC;QACnBc,GAAG,EAAE,IAAIb,WAAW;OACrB,CAAC;MACFc,OAAO,EAAC,IAAIf,SAAS,CAAC;QACpBgB,GAAG,EAAE,IAAIf,WAAW;OACrB;KACH,CAAC;IAsBD,UAAK,GAAW,EAAE;IAClB,SAAI,GAAS,KAAK;IAClB,eAAU,GAAS,KAAK;IAKtB,IAAI,CAACI,YAAY,CAACY,OAAO,CAAEC,IAAQ,IAAG;MAEpC,IAAI,CAACC,KAAK,GAACD,IAAI;IACjB,CAAC,CAAC;EACJ;EAhCD,IAAWV,IAAI;IACd,OAAO,IAAI,CAACY,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC;EAC9B;EACA,IAAWZ,SAAS;IAClB,OAAO,IAAI,CAACW,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC;EACnC;EACA,IAAWC,eAAe;IACxB,OAAO,IAAI,CAACF,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC;EACzC;EACA,IAAWV,SAAS;IAClB,OAAO,IAAI,CAACS,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC;EACnC;EACA,IAAWT,SAAS;IAClB,OAAO,IAAI,CAACQ,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC;EACnC;EACA,IAAWP,GAAG;IACZ,OAAO,IAAI,CAACM,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAEA,GAAG,CAAC,KAAK,CAAC;EAC5C;EACA,IAAWL,GAAG;IACZ,OAAO,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,SAAS,CAAC,EAAEA,GAAG,CAAC,KAAK,CAAC;EAC7C;EAcEE,OAAO,CAACL,IAAQ;IACd,IAAI,CAACb,YAAY,CAACmB,QAAQ,CAAEN,IAAQ,IAAG;MACrCO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACnB,CAAC,CAAC;IACF,IAAI,CAACb,YAAY,CAACY,OAAO,CAAEC,IAAQ,IAAG;MAEpC,IAAI,CAACC,KAAK,GAACD,IAAI;IACjB,CAAC,CAAC;EACJ;;AAzDWf,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAwB;EAAAC;EAAAC;EAAAC;IAAA;MCzBlCC,yBAAG;MAAAA,mCAAmB;MAAAA,iBAAI","names":["FormGroup","FormControl","Validators","BatchdetailsComponent","constructor","batchservice","id","required","name","startdate","sessionDuration","noOfSeats","startTime","course","cid","trainer","tid","getdata","data","batch","form","get","sessionduration","Onclick","postdata","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["G:\\project\\savitasoft\\angular-project\\src\\app\\components\\batchdetails\\batchdetails.component.ts","G:\\project\\savitasoft\\angular-project\\src\\app\\components\\batchdetails\\batchdetails.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BatchService } from 'src/app/services/batch.service';\n\n\nexport interface Batch{\n  id:number;\n  name:string;\n  startDate:string;\n  sessionDuration:string;\n  noOfSeats:number;\n  startTime:string;\n  // course:Object;\n  // trainer:Object\n  cid:number;\n  tid:number;\n  \n  \n}\n\n@Component({\n  selector: 'app-batchdetails',\n  templateUrl: './batchdetails.component.html',\n  styleUrls: ['./batchdetails.component.css']\n})\nexport class BatchdetailsComponent {\n  form= new FormGroup({\n    id: new FormControl('',Validators.required),\n    name: new FormControl('',Validators.required),\n    startdate: new FormControl('',[Validators.required,]),\n    sessionDuration: new FormControl('',[Validators.required,]),\n    noOfSeats: new FormControl('',[Validators.required,]),\n    startTime: new FormControl('',[Validators.required,]),\n    course:new FormGroup({\n      cid: new FormControl()\n    }),\n    trainer:new FormGroup({\n      tid: new FormControl()\n    })\n })\n public get name(){\n  return this.form.get('name');\n}\npublic get startdate(){\n  return this.form.get('startdate');\n}\npublic get sessionduration(){\n  return this.form.get('sessionduration');\n}\npublic get noOfSeats(){\n  return this.form.get('noOfSeats');\n}\npublic get startTime(){\n  return this.form.get('startTime');\n}\npublic get cid(){\n  return this.form.get('course')?.get('cid');\n}\npublic get tid(){\n  return this.form.get('trainer')?.get('tid');\n}\n  batch : Batch[]=[]\n  view:boolean=false;\n  modifyview:boolean=false;\n\n  bdetail\n\n  constructor(private batchservice:BatchService){\n    this.batchservice.getdata((data:any)=>\n    {\n      this.batch=data;\n    })\n  }\n\n  Onclick(data:any){\n    this.batchservice.postdata((data:any)=>{\n      console.log(data);\n    })\n    this.batchservice.getdata((data:any)=>\n    {\n      this.batch=data;\n    })\n  }\n}\n","<p>batchdetails works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
