{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/batch.service\";\nimport * as i2 from \"@angular/common\";\nfunction BatchdetailsComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 5);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 5);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 6);\n    i0.ɵɵtext(19, \"Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"td\")(21, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function BatchdetailsComponent_tr_17_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const b_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.loaddata(b_r1));\n    });\n    i0.ɵɵtext(22, \"Modify\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"td\")(24, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function BatchdetailsComponent_tr_17_Template_button_click_24_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const b_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.Ondelete(b_r1.id));\n    });\n    i0.ɵɵtext(25, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const b_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.sessionDuration);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.startTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.noOfSeats);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", b_r1.cid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(b_r1.cname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", b_r1.tid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(b_r1.tname);\n  }\n}\nexport class BatchdetailsComponent {\n  constructor(batchservice) {\n    this.batchservice = batchservice;\n    this.form = new FormGroup({\n      id: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      startdate: new FormControl('', [Validators.required]),\n      sessionDuration: new FormControl('', [Validators.required]),\n      noOfSeats: new FormControl('', [Validators.required]),\n      startTime: new FormControl('', [Validators.required]),\n      course: new FormGroup({\n        cid: new FormControl()\n      }),\n      trainer: new FormGroup({\n        tid: new FormControl()\n      })\n    });\n    this.batch = [];\n    this.view = false;\n    this.modifyview = false;\n    this.bdetail = {\n      id: 0,\n      name: '',\n      startDate: '',\n      sessionDuration: '',\n      noOfSeats: 0,\n      startTime: '',\n      cid: 0,\n      tid: 0,\n      cname: '',\n      tname: ''\n    };\n    this.batchservice.getdata(data => {\n      this.batch = data;\n    });\n  }\n  get name() {\n    return this.form.get('name');\n  }\n  get startdate() {\n    return this.form.get('startdate');\n  }\n  get sessionduration() {\n    return this.form.get('sessionduration');\n  }\n  get noOfSeats() {\n    return this.form.get('noOfSeats');\n  }\n  get startTime() {\n    return this.form.get('startTime');\n  }\n  get cid() {\n    return this.form.get('course')?.get('cid');\n  }\n  get tid() {\n    return this.form.get('trainer')?.get('tid');\n  }\n  Onclick(data) {\n    this.batchservice.postdata(data => {\n      console.log(data);\n    });\n    this.batchservice.getdata(data => {\n      this.batch = data;\n    });\n    this.view = false;\n    this.modifyview = false;\n  }\n  OnModify(data) {\n    this.batchservice.putdata(data => {\n      console.log(data);\n      this.batchservice.getdata(data => {\n        this.batch = data;\n      });\n    });\n    this.view = false;\n    this.modifyview = false;\n  }\n  Ondelete(id) {\n    this.batchservice.deletedata(id, data => {\n      this.batchservice.getdata(data => {\n        this.batch = data;\n      });\n    });\n  }\n  addview() {\n    this.view = true;\n  }\n  loaddata(c) {\n    this.bdetail = c;\n    this.modifyview = true;\n  }\n}\nBatchdetailsComponent.ɵfac = function BatchdetailsComponent_Factory(t) {\n  return new (t || BatchdetailsComponent)(i0.ɵɵdirectiveInject(i1.BatchService));\n};\nBatchdetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BatchdetailsComponent,\n  selectors: [[\"app-batchdetails\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"container\", 2, \"margin\", \"50px\", \"padding\", \"20px\"], [1, \"table\", \"table-striped\", \"table-inverse\", \"table-responsive\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-warning\", 3, \"click\"]],\n  template: function BatchdetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\", 2)(3, \"tr\")(4, \"th\", 3);\n      i0.ɵɵtext(5, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 3);\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 3);\n      i0.ɵɵtext(9, \"StartDate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 3);\n      i0.ɵɵtext(11, \"SessionDuration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 3);\n      i0.ɵɵtext(13, \"Start Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 3);\n      i0.ɵɵtext(15, \"No Of Seats\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, BatchdetailsComponent_tr_17_Template, 26, 10, \"tr\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.batch);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","BatchdetailsComponent","constructor","batchservice","id","required","name","startdate","sessionDuration","noOfSeats","startTime","course","cid","trainer","tid","startDate","cname","tname","getdata","data","batch","form","get","sessionduration","Onclick","postdata","console","log","view","modifyview","OnModify","putdata","Ondelete","deletedata","addview","loaddata","c","bdetail","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["G:\\project\\savitasoft\\angular-project\\src\\app\\components\\batchdetails\\batchdetails.component.ts","G:\\project\\savitasoft\\angular-project\\src\\app\\components\\batchdetails\\batchdetails.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BatchService } from 'src/app/services/batch.service';\n\n\nexport interface Batch{\n  id:number;\n  name:string;\n  startDate:string;\n  sessionDuration:string;\n  noOfSeats:number;\n  startTime:string;\n  // course:Object;\n  // trainer:Object\n  cid:number;\n  tid:number;\n  cname:string;\n  tname:string;\n  \n  \n}\n\n@Component({\n  selector: 'app-batchdetails',\n  templateUrl: './batchdetails.component.html',\n  styleUrls: ['./batchdetails.component.css']\n})\nexport class BatchdetailsComponent {\n  form= new FormGroup({\n    id: new FormControl('',Validators.required),\n    name: new FormControl('',Validators.required),\n    startdate: new FormControl('',[Validators.required,]),\n    sessionDuration: new FormControl('',[Validators.required,]),\n    noOfSeats: new FormControl('',[Validators.required,]),\n    startTime: new FormControl('',[Validators.required,]),\n    course:new FormGroup({\n      cid: new FormControl()\n    }),\n    trainer:new FormGroup({\n      tid: new FormControl()\n    })\n })\n public get name(){\n  return this.form.get('name');\n}\npublic get startdate(){\n  return this.form.get('startdate');\n}\npublic get sessionduration(){\n  return this.form.get('sessionduration');\n}\npublic get noOfSeats(){\n  return this.form.get('noOfSeats');\n}\npublic get startTime(){\n  return this.form.get('startTime');\n}\npublic get cid(){\n  return this.form.get('course')?.get('cid');\n}\npublic get tid(){\n  return this.form.get('trainer')?.get('tid');\n}\n  batch : Batch[]=[]\n  view:boolean=false;\n  modifyview:boolean=false;\n\n  bdetail:Batch={\n    id: 0,\n    name: '',\n    startDate: '',\n    sessionDuration: '',\n    noOfSeats: 0,\n    startTime: '',\n    cid: 0,\n    tid: 0,\n    cname: '',\n    tname: ''\n  }\n  \n\n  constructor(private batchservice:BatchService){\n    this.batchservice.getdata((data:any)=>\n    {\n      this.batch=data;\n    })\n  }\n\n  Onclick(data:any){\n    this.batchservice.postdata((data:any)=>{\n      console.log(data);\n    })\n    this.batchservice.getdata((data:any)=>\n    {\n      this.batch=data;\n    })\n    this.view=false;\n    this.modifyview=false;\n  }\n\n  OnModify(data:any){\n    this.batchservice.putdata((data:any)=>{\n      console.log(data);\n      this.batchservice.getdata((data:any)=>\n      {\n        this.batch=data;\n      })\n    })\n    this.view=false;\n    this.modifyview=false;\n  }\n\n  Ondelete(id:any){\n    this.batchservice.deletedata(id,(data:any)=>{\n      this.batchservice.getdata((data:any)=>\n      {\n        this.batch=data;\n      })\n    })\n  }\n\n  public addview()\n  {\n    this.view=true;\n  }\n  public loaddata(c){\n    this.bdetail=c;\n    this.modifyview=true;\n\n  }\n}\n","<div class=\"container\" style=\"margin:50px; padding:20px\" >\n    <table class=\"table table-striped table-inverse table-responsive\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">StartDate</th>\n            <th scope=\"col\">SessionDuration</th>\n            <th scope=\"col\">Start Time</th>\n            <th scope=\"col\">No Of Seats</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let b of batch\">\n            <td>{{b.id}}</td>\n            <td>{{b.name}}</td>\n            <td>{{b.startDate}}</td>\n            <td>{{b.sessionDuration}}</td>\n            <td>{{b.startTime}}</td>\n            <td>{{b.noOfSeats}}</td>\n            <td value=\"{{b.cid}}\">{{b.cname}}</td>\n            <td value=\"{{b.tid}}\">{{b.tname}}</td>\n            <td>\n                <button type=\"button\" class=\"btn btn-outline-danger \">Delete</button>\n            </td>\n            <td>\n                <button type=\"button\" class=\"btn btn-outline-danger \" (click)=\"loaddata(b)\">Modify</button>\n            </td>\n            <td>\n                <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"Ondelete(b.id)\" >Delete</button>\n            </td>\n        </tbody>\n      </table>   \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
