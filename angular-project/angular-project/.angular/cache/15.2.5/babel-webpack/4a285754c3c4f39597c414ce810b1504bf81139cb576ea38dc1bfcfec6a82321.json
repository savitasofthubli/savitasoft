{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/phone-verify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/register.service\";\nimport * as i4 from \"src/app/services/course-service.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction OtpVerifyComponent_div_0_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"Enter your 6 digit code.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtpVerifyComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h4\");\n    i0.ɵɵtext(2, \"Enter your 6 digit code for verification:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"form\", 2, 3)(6, \"div\", 4)(7, \"label\", 5);\n    i0.ɵɵtext(8, \"Enter OTP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 6);\n    i0.ɵɵtemplate(10, OtpVerifyComponent_div_0_div_10_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementStart(12, \"div\")(13, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function OtpVerifyComponent_div_0_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const _r2 = i0.ɵɵreference(5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick(_r2.value));\n    });\n    i0.ɵɵtext(14, \"Verify OTP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"br\")(16, \"br\");\n    i0.ɵɵelementStart(17, \"small\")(18, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function OtpVerifyComponent_div_0_Template_a_click_18_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onClick2());\n    });\n    i0.ɵɵtext(19, \"Resend OTP?\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.form.get(\"otp\").errors == null ? null : ctx_r0.form.get(\"otp\").errors[\"minlength\"]) || (ctx_r0.form.get(\"otp\").errors == null ? null : ctx_r0.form.get(\"otp\").errors[\"maxlength\"]));\n  }\n}\nfunction OtpVerifyComponent_div_1_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r9 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", b_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(b_r9.name);\n  }\n}\nfunction OtpVerifyComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"form\", 2, 3)(3, \"h3\", 11);\n    i0.ɵɵtext(4, \"Registration form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\")(6, \"br\");\n    i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 12);\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 14);\n    i0.ɵɵtext(13, \"Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 16);\n    i0.ɵɵtext(17, \"WhatsApp Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 18);\n    i0.ɵɵtext(21, \"College\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 20);\n    i0.ɵɵtext(25, \"Branch\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 22);\n    i0.ɵɵtext(29, \"Semester\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 4)(32, \"label\", 24);\n    i0.ɵɵtext(33, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 4)(36, \"label\", 26);\n    i0.ɵɵtext(37, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"input\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 4)(40, \"label\", 28);\n    i0.ɵɵtext(41, \"Parent Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(42, \"input\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"div\", 30)(44, \"select\", 31)(45, \"option\");\n    i0.ɵɵtext(46, \"Courses\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(47, OtpVerifyComponent_div_1_option_47_Template, 2, 2, \"option\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(48, \"br\");\n    i0.ɵɵelementStart(49, \"div\")(50, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function OtpVerifyComponent_div_1_Template_button_click_50_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const _r7 = i0.ɵɵreference(2);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.postdata(_r7.value));\n    });\n    i0.ɵɵtext(51, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(52, \"br\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(9);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.phoneNumber);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.whatsappNumber);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.college);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.branch);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.semester);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.address);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.registerform.parentNumber);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.notstudent);\n  }\n}\nexport class OtpVerifyComponent {\n  constructor(phoneVerify, router, registerService, courseservice) {\n    this.phoneVerify = phoneVerify;\n    this.router = router;\n    this.registerService = registerService;\n    this.courseservice = courseservice;\n    // @Output() event = new EventEmitter<string>();\n    this.form = new FormGroup({\n      otp: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]),\n      name: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\n      whatsappNumber: new FormControl(null, Validators.required),\n      college: new FormControl(null, Validators.required),\n      branch: new FormControl(null, Validators.required),\n      semester: new FormControl(null, Validators.required),\n      address: new FormControl(null, Validators.required),\n      parentNumber: new FormControl(null, Validators.required),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      courses: new FormGroup({\n        id: new FormControl(),\n        name: new FormControl()\n      })\n    });\n    this.coursedetail = [];\n    this.notstudent = [];\n    this.otpview = true;\n    this.registerform = {\n      name: '',\n      phoneNumber: '',\n      whatsappNumber: '',\n      college: '',\n      branch: '',\n      semester: 0,\n      address: '',\n      email: '',\n      parentNumber: '',\n      cid: 0,\n      cname: '',\n      courses: []\n    };\n    this.registerview = false;\n    this.courseservice.getcourses(data => {\n      this.coursedetail = data;\n    });\n  }\n  get otp() {\n    return this.form.get('otp');\n  }\n  // check(retval:any):boolean{\n  //   if(retval===\"Valid otp!\"){\n  //     return true;\n  //   }else{\n  //     return false;\n  //   }\n  // }\n  onClick(data) {\n    let maindata = Object.assign(data, JSON.parse(this.phoneVerify.getNumber()));\n    console.log(maindata);\n    this.phoneVerify.postOtp(maindata).subscribe(response => {\n      alert(\"Otp is validated\");\n      console.log(response);\n      // alert(\"Otp is validated\")\n      this.registerform = response;\n      this.studentcourse(response);\n      // this.router.navigate(['phoneNumberVerify/otpVerify/registerForm']);\n      this.phoneVerify.clear();\n      // this.registerService.setData(response);\n      // this.event.emit(this.registerService.getData());\n      this.otpview = false;\n      this.registerview = true;\n    }, error => {\n      // console.log(error);\n      // alert(\"Otp is invalid\");\n      this.form.reset();\n      if (error.status == 404) {\n        console.log(\"error resolved\");\n        alert(\"Otp is validated\");\n        this.otpview = false;\n        this.registerview = true;\n      }\n    });\n    // if(this.check(retval)){\n    //   alert(\"Phone number verified successfully\");\n    //   this.router.navigate(['registerForm']);\n    // }else{\n    //   alert(\"Invalid otp.Verify again\");\n    // }\n    // this.phoneVerify.getData((data:any)=>{\n    //    if(data!==null){  \n    //       this.registerService.setData(data);\n    //    }\n    // });\n  }\n  // senddata(){\n  //   //let data2=this.registerService.getData();\n  //   this.event.emit(this.registerService.getData());\n  // }\n  onClick2() {\n    console.log(JSON.parse(this.phoneVerify.getNumber()));\n    this.phoneVerify.postNumber(JSON.parse(this.phoneVerify.getNumber()), retval => {\n      console.log(retval);\n      alert(\"Otp sent to your phone number successfully\");\n    });\n  }\n  postdata(data) {\n    this.registerService.postregister(data).subscribe(response => {\n      console.log(response);\n      alert(\"data sent successfully\");\n    }), error => {\n      if (error.status == 500) {\n        console.log(\"error resolved\");\n        alert(\"data sent successfully\");\n      }\n    };\n  }\n  get id() {\n    return this.form.get('id');\n  }\n  get name() {\n    return this.form.get('name');\n  }\n  get description() {\n    return this.form.get('description');\n  }\n  get duration() {\n    return this.form.get('duration');\n  }\n  get courseType() {\n    return this.form.get('courseType');\n  }\n  get fees() {\n    return this.form.get('fees');\n  }\n  studentcourse(scourse) {\n    for (let i = 0; i < scourse.length; i++) {\n      for (let j = 0; j < this.coursedetail.length; j++) {\n        if (scourse[i].id !== this.coursedetail[j].id) {\n          this.notstudent[i] = scourse;\n        }\n      }\n    }\n  }\n}\nOtpVerifyComponent.ɵfac = function OtpVerifyComponent_Factory(t) {\n  return new (t || OtpVerifyComponent)(i0.ɵɵdirectiveInject(i1.PhoneVerifyService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RegisterService), i0.ɵɵdirectiveInject(i4.CourseServiceService));\n};\nOtpVerifyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OtpVerifyComponent,\n  selectors: [[\"app-otp-verify\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [3, \"formGroup\"], [\"f\", \"ngForm\"], [1, \"fg\"], [\"for\", \"otp\", 1, \"form-label\"], [\"formControlName\", \"otp\", \"type\", \"text\", \"id\", \"otp\", \"name\", \"otp\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", 3, \"click\"], [\"type\", \"button\", 1, \"link\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"text-center\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"value\"], [\"for\", \"phoneNumber\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"name\", \"phoneNumber\", 1, \"form-control\", 3, \"value\"], [\"for\", \"whatsappNumber\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"whatsappNumber\", \"name\", \"whatsappNumber\", 1, \"form-control\", 3, \"value\"], [\"for\", \"college\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"college\", \"name\", \"college\", 1, \"form-control\", 3, \"value\"], [\"for\", \"branch\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"branch\", \"name\", \"branch\", 1, \"form-control\", 3, \"value\"], [\"for\", \"semester\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"semester\", \"name\", \"semester\", 1, \"form-control\", 3, \"value\"], [\"for\", \"address\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"address\", \"name\", \"address\", 1, \"form-control\", 3, \"value\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"value\"], [\"for\", \"parentNumber\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"parentNumber\", \"name\", \"parentNumber\", 1, \"form-control\", 3, \"value\"], [\"formGroupName\", \"courses\"], [\"formControlName\", \"id\", \"name\", \"id\", \"id\", \"id\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"]],\n  template: function OtpVerifyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, OtpVerifyComponent_div_0_Template, 20, 2, \"div\", 0);\n      i0.ɵɵtemplate(1, OtpVerifyComponent_div_1_Template, 53, 11, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.otpview);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerview);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i6.FormGroupName],\n  styles: [\"button[_ngcontent-%COMP%]{\\r\\n    background-color:#563d7c;\\r\\n    color:white;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover{\\r\\n    background-color:#563d7c;\\r\\n    color:white;\\r\\n}\\r\\n\\r\\n.container[_ngcontent-%COMP%]{\\r\\n    padding: 40px 240px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]{\\r\\n    border-color: black;\\r\\n    border-width: 0.0025cm;\\r\\n    border-style: solid;\\r\\n    border-radius: 5px;\\r\\n    padding: 10px 10px;\\r\\n}\\r\\n\\r\\n.fg[_ngcontent-%COMP%]{\\r\\n    padding: 30px 30px;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%]{\\r\\n    padding-right: 140px;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n    font-size: large;\\r\\n}\\r\\n\\r\\n.link[_ngcontent-%COMP%]:hover{\\r\\n    text-decoration: underline;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3RyYXRpb24vb3RwLXZlcmlmeS9vdHAtdmVyaWZ5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7SUFDeEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSwwQkFBMEI7QUFDOUIiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiM1NjNkN2M7XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojNTYzZDdjO1xyXG4gICAgY29sb3I6d2hpdGU7XHJcbn1cclxuXHJcbi5jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiA0MHB4IDI0MHB4O1xyXG59XHJcblxyXG5mb3Jte1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci13aWR0aDogMC4wMDI1Y207XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweCAxMHB4O1xyXG59XHJcblxyXG4uZmd7XHJcbiAgICBwYWRkaW5nOiAzMHB4IDMwcHg7XHJcbn1cclxuXHJcbmlucHV0e1xyXG4gICAgcGFkZGluZy1yaWdodDogMTQwcHg7XHJcbn1cclxuXHJcbmxhYmVse1xyXG4gICAgZm9udC1zaXplOiBsYXJnZTtcclxufVxyXG5cclxuLmxpbms6aG92ZXJ7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","OtpVerifyComponent","constructor","phoneVerify","router","registerService","courseservice","otp","required","minLength","maxLength","name","phoneNumber","pattern","whatsappNumber","college","branch","semester","address","parentNumber","email","courses","id","cid","cname","getcourses","data","coursedetail","form","get","onClick","maindata","Object","assign","JSON","parse","getNumber","console","log","postOtp","subscribe","response","alert","registerform","studentcourse","clear","otpview","registerview","error","reset","status","onClick2","postNumber","retval","postdata","postregister","description","duration","courseType","fees","scourse","i","length","j","notstudent","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["G:\\project\\savitasoft\\angular-project\\src\\app\\components\\registration\\otp-verify\\otp-verify.component.ts","G:\\project\\savitasoft\\angular-project\\src\\app\\components\\registration\\otp-verify\\otp-verify.component.html"],"sourcesContent":["import { Coursedetail } from './../../coursedetails/coursedetails.component';\r\n\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CourseServiceService } from 'src/app/services/course-service.service';\r\nimport { PhoneVerifyService } from 'src/app/services/phone-verify.service';\r\nimport { RegisterService } from 'src/app/services/register.service';\r\n//import { RegisterForm } from '../register-form/register-form.component';\r\n\r\nexport interface Otp{\r\n  otp: string;\r\n}\r\nexport interface RegisteredCourse{\r\n  id:number;\r\n  name:string;\r\n  description:string;\r\n  duration:string;\r\n  courseType:string;\r\n  fees:number\r\n\r\n}\r\n\r\nexport interface RegisterForm{\r\n  name: string;\r\n  phoneNumber: string;\r\n  whatsappNumber: string;\r\n  college: string;\r\n  branch: string;\r\n  semester: number;\r\n  address: string;\r\n  email: string;\r\n  parentNumber:string;\r\n  cid: number;\r\n  cname: string;\r\n  courses : RegisteredCourse[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-otp-verify',\r\n  templateUrl: './otp-verify.component.html',\r\n  styleUrls: ['./otp-verify.component.css']\r\n})\r\nexport class OtpVerifyComponent {\r\n // @Output() event = new EventEmitter<string>();\r\n  form= new FormGroup({\r\n    otp: new FormControl('',[Validators.required, Validators.minLength(6),Validators.maxLength(6)]),\r\n    name:  new FormControl<any>(null,Validators.required),\r\n    phoneNumber: new FormControl<any>(null,[Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\r\n    whatsappNumber: new FormControl(<any>null,Validators.required),\r\n    college: new FormControl<any>(null,Validators.required),\r\n    branch: new FormControl<any>(null,Validators.required),\r\n    semester: new FormControl<any>(null,Validators.required),\r\n    address: new FormControl<any>(null,Validators.required),\r\n    parentNumber:new FormControl<any>(null,Validators.required),\r\n    email: new FormControl<any>(null,[Validators.required,Validators.email]),\r\n    courses:new FormGroup({\r\n      id: new FormControl(),\r\n      name:new FormControl()\r\n    })\r\n });\r\n\r\n coursedetail : RegisteredCourse[]=[];\r\n notstudent:RegisteredCourse[]=[];\r\n\r\n otpview:boolean=true;\r\n registerform:RegisterForm={\r\n   name: '',\r\n   phoneNumber: '',\r\n   whatsappNumber: '',\r\n   college: '',\r\n   branch: '',\r\n   semester: 0,\r\n   address: '',\r\n   email: '',\r\n   parentNumber: '',\r\n   cid: 0,\r\n   cname: '',\r\n   courses: []\r\n }\r\n registerview:boolean=false;\r\n\r\n  constructor(private phoneVerify: PhoneVerifyService, private router: Router, private registerService:RegisterService,private courseservice:CourseServiceService){\r\n    this.courseservice.getcourses((data:any)=>{\r\n        this.coursedetail=data;\r\n      })\r\n  }\r\n\r\n  \r\n  public get otp(){\r\n    return this.form.get('otp');\r\n  }\r\n  \r\n  // check(retval:any):boolean{\r\n  //   if(retval===\"Valid otp!\"){\r\n  //     return true;\r\n  //   }else{\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  onClick(data: string)\r\n  {\r\n     let maindata:any = Object.assign(data,JSON.parse(this.phoneVerify.getNumber()));\r\n     console.log(maindata);\r\n     this.phoneVerify.postOtp(maindata).subscribe((response:any)=>{\r\n        alert(\"Otp is validated\")\r\n        console.log(response);\r\n       // alert(\"Otp is validated\")\r\n        this.registerform=response;\r\n        this.studentcourse(response);\r\n       // this.router.navigate(['phoneNumberVerify/otpVerify/registerForm']);\r\n        this.phoneVerify.clear();\r\n       // this.registerService.setData(response);\r\n       // this.event.emit(this.registerService.getData());\r\n        this.otpview=false;\r\n        this.registerview=true;\r\n      \r\n     \r\n    },\r\n    (error : HttpErrorResponse)=>{\r\n      // console.log(error);\r\n      // alert(\"Otp is invalid\");\r\n      this.form.reset();\r\n      if(error.status==404){\r\n        console.log(\"error resolved\")\r\n        alert(\"Otp is validated\")\r\n        this.otpview=false;\r\n        this.registerview=true;\r\n      }\r\n    });\r\n        // if(this.check(retval)){\r\n        //   alert(\"Phone number verified successfully\");\r\n        //   this.router.navigate(['registerForm']);\r\n        // }else{\r\n        //   alert(\"Invalid otp.Verify again\");\r\n        // }\r\n        \r\n   \r\n\r\n    \r\n\r\n    // this.phoneVerify.getData((data:any)=>{\r\n    //    if(data!==null){  \r\n    //       this.registerService.setData(data);\r\n    //    }\r\n    // });\r\n\r\n  }\r\n  // senddata(){\r\n  //   //let data2=this.registerService.getData();\r\n  //   this.event.emit(this.registerService.getData());\r\n  // }\r\n\r\n  onClick2()\r\n  {\r\n    console.log(JSON.parse(this.phoneVerify.getNumber()));\r\n    this.phoneVerify.postNumber(JSON.parse(this.phoneVerify.getNumber()),(retval:any)=>{\r\n      console.log(retval);\r\n      alert(\"Otp sent to your phone number successfully\");\r\n    });\r\n  }\r\n\r\n  postdata(data:any){\r\n    this.registerService.postregister(data).subscribe((response)=>{\r\n      console.log(response);\r\n     \r\n      alert(\"data sent successfully\");\r\n      }),\r\n      (error:HttpErrorResponse)=>{\r\n        if(error.status==500){\r\n          console.log(\"error resolved\")\r\n          alert(\"data sent successfully\");\r\n        }\r\n      }\r\n  \r\n}\r\n\r\npublic get id(){\r\n  return this.form.get('id');\r\n }\r\npublic get name(){\r\n  return this.form.get('name');\r\n}\r\npublic get description(){\r\n  return this.form.get('description');\r\n}\r\npublic get duration(){\r\n  return this.form.get('duration');\r\n}\r\npublic get courseType(){\r\n  return this.form.get('courseType');\r\n}\r\npublic get fees(){\r\n  return this.form.get('fees');\r\n}\r\n\r\n\r\npublic studentcourse(scourse){\r\n\r\n  for(let i=0;i<scourse.length;i++)\r\n  {\r\n    for(let j=0;j<this.coursedetail.length;j++)\r\n    {\r\n      if(scourse[i].id!==this.coursedetail[j].id)\r\n      {\r\n        this.notstudent[i]=scourse;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n  \r\n}\r\n","<div *ngIf=\"otpview\" class=\"container\">\r\n    <h4>Enter your 6 digit code for verification:</h4><br>\r\n    <form [formGroup]=\"form\" #f=\"ngForm\">\r\n        <div class=\"fg\">\r\n            <label for=\"otp\" class=\"form-label\" >Enter OTP</label>\r\n              <input formControlName=\"otp\" type=\"text\" class=\"form-control\" id=\"otp\" name=\"otp\">\r\n                <div class=\"alert alert-danger\" *ngIf=\"form.get('otp').errors?.['minlength'] || form.get('otp').errors?.['maxlength']\">Enter your 6 digit code.</div>\r\n            <br>\r\n            <div>\r\n                <button class=\"btn\" type=\"button\" (click)=\"onClick(f.value)\">Verify OTP</button><br><br>\r\n                <small>\r\n                    <a class=\"link\" type=\"button\" (click)=\"onClick2()\">Resend OTP?</a>\r\n                </small>\r\n            </div>\r\n        </div>\r\n    </form> \r\n</div>\r\n\r\n\r\n<div *ngIf=\"registerview\" class=\"container\">\r\n    <form [formGroup]=\"form\" #f=\"ngForm\" >\r\n        <h3 class=\"text-center\">Registration form</h3><br><br>\r\n        <div class=\"fg\">\r\n            <label for=\"name\" class=\"form-label\" >Name</label>\r\n            <input  type=\"text\" class=\"form-control\" id=\"name\"  name=\"name\" value=\"{{registerform.name}}\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"phoneNumber\" class=\"form-label\" >Phone Number</label>\r\n            <input   type=\"text\" class=\"form-control\" id=\"phoneNumber\"  name=\"phoneNumber\" value=\"{{registerform.phoneNumber}}\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"whatsappNumber\" class=\"form-label\" >WhatsApp Number</label>\r\n            <input  type=\"text\" class=\"form-control\" id=\"whatsappNumber\"  name=\"whatsappNumber\" value=\"{{registerform.whatsappNumber}}\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"college\" class=\"form-label\" >College</label>\r\n            <input  type=\"text\" class=\"form-control\" id=\"college\"  name=\"college\" value=\"{{registerform.college}}\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"branch\" class=\"form-label\" >Branch</label>\r\n            <input  type=\"text\" class=\"form-control\" id=\"branch\"  name=\"branch\" value=\"{{registerform.branch}}\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"semester\" class=\"form-label\" >Semester</label>\r\n            <input  type=\"text\" class=\"form-control\" id=\"semester\"  name=\"semester\" value=\"{{registerform.semester}}\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"address\" class=\"form-label\" >Address</label>\r\n            <input  type=\"text\" class=\"form-control\" id=\"address\"  name=\"address\" value=\"{{registerform.address}}\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"email\" class=\"form-label\" >Email</label>\r\n            <input  type=\"text\" class=\"form-control\" id=\"email\"  name=\"email\" value=\"{{registerform.email}}\">\r\n        </div>\r\n        <div class=\"fg\">\r\n            <label for=\"parentNumber\" class=\"form-label\" >Parent Number</label>\r\n            <input  type=\"text\" class=\"form-control\" id=\"parentNumber\"  name=\"parentNumber\" value=\"{{registerform.parentNumber}}\">\r\n        </div>\r\n        <div formGroupName=\"courses\">\r\n            <select formControlName=\"id\" name=\"id\" id=\"id\" class=\"form-control\">\r\n                <option>Courses</option>\r\n                <option *ngFor=\"let b of notstudent\" value=\"{{b.id}}\">{{b.name}}</option>\r\n            </select>\r\n        </div>\r\n        <br>\r\n        <div>\r\n            <button class=\"btn btn-primary\" type=\"submit\" (click)=\"postdata(f.value)\">Submit</button><br>\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
